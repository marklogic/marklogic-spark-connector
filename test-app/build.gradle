plugins {
  id "net.saliman.properties" version "1.5.2"
  id "com.marklogic.ml-gradle" version "6.0.0"
}

task reloadTestData(type: com.marklogic.gradle.task.MarkLogicTask) {
  description = "Convenience task for clearing the test database and reloading the test data; only intended for a connector developer to use."
  doLast {
    new com.marklogic.mgmt.resource.databases.DatabaseManager(getManageClient()).clearDatabase("spark-test-test-content")
  }
}
reloadTestData.finalizedBy mlLoadData

tasks.register("addMarkLogic12SchemasIfNecessary", com.marklogic.gradle.task.MarkLogicTask) {
  description = "If testing against MarkLogic 12, include schemas that will not work on MarkLogic 11 or earlier."
  doLast {
    def version = new com.marklogic.mgmt.resource.clusters.ClusterManager(getManageClient()).getVersion()
    if (version.startsWith("12.")) {
      mlAppConfig.getSchemaPaths().add(new File(getProjectDir(), "src/main/ml-schemas-12").getAbsolutePath())
    }
  }
}
mlDeploy.dependsOn addMarkLogic12SchemasIfNecessary
mlLoadSchemas.dependsOn addMarkLogic12SchemasIfNecessary
